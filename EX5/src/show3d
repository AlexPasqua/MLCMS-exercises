import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.decomposition import PCA

def create_delay_embedding(dataset, starting_row, num_delays=351):
    return dataset[starting_row:starting_row+num_delays, :].flatten()

df_loaded = pd.read_csv("../data/MI_timesteps.txt", sep=" ", index_col=0)
plt.rcParams["figure.figsize"] = (14,7)
df = df_loaded.iloc[1000:]
df.index = df.index - 1000
for column in df.columns:
    plt.plot(df[column])
x_original = df.to_numpy()

x_only_first_three = x_original[:,:3]
print(x_only_first_three.shape)
for i in range(x_only_first_three.shape[1]):
    plt.plot(x_only_first_three[:, i])
    
M = 11000
num_delays = 351
M_dataset = np.empty(shape=(M, num_delays * x_only_first_three.shape[1]))
for i in range(M):
    M_dataset[i] = create_delay_embedding(x_only_first_three, starting_row=i, num_delays=num_delays)
    
pca = PCA(n_components=3)
x_pca = pca.fit_transform(M_dataset)

print(x_pca.shape, x_original.shape)

fig = plt.figure(figsize=(20,20))
ax = fig.add_subplot(projection='3d')
ax.scatter(*x_pca.T, s=1, c=x_original[:11000, 0])
plt.show()